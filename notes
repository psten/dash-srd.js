ToDo:

- check if http-server or python -m http.server actually support DASH. If not, set up a proper server based on Jetty or nginx.

- herausfinden, wie dash-srd die JSON-MPD an dash 1.5.1 übergibt

- überprüfen, ob dies weiterhin mit dash-srd und der aktuelle dash bibliothek funktioniert

- eigene Erweiterung der dash bibliothek um JSON Objekt überprüfen!


mpdattacher.js irgenwo gehen die Tiles 1-3 verloren, nur Tile0 kommt durch.
Betrifft alle zoomlayer inkl fallbacklayer. ggf problem im manifestloader in der dash.js-Erweiterung?!

nicht die tiles gehen verloren, sondern die representationId

parser/utils/SegmentUtils.js - 0 wurde hier nicht akzeptiert!

SupplementalProperty wird vom dash.js-v1.5.1 parser gefiltert/verworfen, der dash.js-v3.0.0 parser behält es jedoch bei.
ggf. kommt hierdurch die dashSRD Erweiterung aus dem Tritt..

BaseURL scheint in dash.js-v1.5.1 nun relativ angegeben zu werden
BaseURI ist neu



  orderedAdaptationSets.push

  zoomLayer2Attacher
    for (var i = 0; i < zoomLayer2VideoElements.length; i++) {
        var videoElement = "video" + (i + 5);
        var player = launchDashPlayer(videoElement);
        player.setAutoSwitchQuality(false);
        zoomLayer2PlayerObjects.push(player);
    }

    for (var i = 0; i < zoomLayer2PlayerObjects.length; i++) {
        var player = zoomLayer2PlayerObjects[i];
        var source = [mpdURL, tileMPDs[i]];
        zoomLayer1VideoSyncObjects[i] = null;
        zoomLayer2VideoSyncObjects[i] = new TIMINGSRC.MediaSync(zoomLayer2VideoElements[i], timingObject);
        player.attachSource(source);
    }

SRDPlayer

playereventhandler.js
  emitBitrateChanges
  updateViewLayerOnReadyState

UIEventHandlers.js
  updateVideoContainer


  how to get the viewport from react 360?
  const cameraQuat = r360.getCameraQuaternion();


Object extension of dash.js 1.5.1:
  DashParser.js
    1 r(a, b, c)          JSON Parser, in addition to the regular parser q(a, b, c)
    2 parseJSON(a, b, c)  wrapper for r(a, b, c) from (1)
  ManifestLoader.js, maybe also HTTPLoader.js?
-   3 e(a, b)             calls parseJSON(b, f, this.xLinkController) from (2) and handles some Manifest stuff
-   4 load(b)             calls e(b[0],b[1]) from (3) if b is an object
  StreamController.js
    5 loadWithManifest(a) calls this.manifestLoader.load(a) from (4) if a[0] contains "http", otherwise sets a as the new manifest.
